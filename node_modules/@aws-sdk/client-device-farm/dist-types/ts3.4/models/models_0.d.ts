import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DeviceFarmServiceException as __BaseException } from "./DeviceFarmServiceException";
export interface TrialMinutes {
  total?: number | undefined;
  remaining?: number | undefined;
}
export declare const DevicePlatform: {
  readonly ANDROID: "ANDROID";
  readonly IOS: "IOS";
};
export type DevicePlatform =
  (typeof DevicePlatform)[keyof typeof DevicePlatform];
export interface AccountSettings {
  awsAccountNumber?: string | undefined;
  unmeteredDevices?: Partial<Record<DevicePlatform, number>> | undefined;
  unmeteredRemoteAccessDevices?:
    | Partial<Record<DevicePlatform, number>>
    | undefined;
  maxJobTimeoutMinutes?: number | undefined;
  trialMinutes?: TrialMinutes | undefined;
  maxSlots?: Record<string, number> | undefined;
  defaultJobTimeoutMinutes?: number | undefined;
  skipAppResign?: boolean | undefined;
}
export declare class ArgumentException extends __BaseException {
  readonly name: "ArgumentException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ArgumentException, __BaseException>);
}
export declare const ArtifactType: {
  readonly APPIUM_JAVA_OUTPUT: "APPIUM_JAVA_OUTPUT";
  readonly APPIUM_JAVA_XML_OUTPUT: "APPIUM_JAVA_XML_OUTPUT";
  readonly APPIUM_PYTHON_OUTPUT: "APPIUM_PYTHON_OUTPUT";
  readonly APPIUM_PYTHON_XML_OUTPUT: "APPIUM_PYTHON_XML_OUTPUT";
  readonly APPIUM_SERVER_OUTPUT: "APPIUM_SERVER_OUTPUT";
  readonly APPLICATION_CRASH_REPORT: "APPLICATION_CRASH_REPORT";
  readonly AUTOMATION_OUTPUT: "AUTOMATION_OUTPUT";
  readonly CALABASH_JAVA_XML_OUTPUT: "CALABASH_JAVA_XML_OUTPUT";
  readonly CALABASH_JSON_OUTPUT: "CALABASH_JSON_OUTPUT";
  readonly CALABASH_PRETTY_OUTPUT: "CALABASH_PRETTY_OUTPUT";
  readonly CALABASH_STANDARD_OUTPUT: "CALABASH_STANDARD_OUTPUT";
  readonly CUSTOMER_ARTIFACT: "CUSTOMER_ARTIFACT";
  readonly CUSTOMER_ARTIFACT_LOG: "CUSTOMER_ARTIFACT_LOG";
  readonly DEVICE_LOG: "DEVICE_LOG";
  readonly EXERCISER_MONKEY_OUTPUT: "EXERCISER_MONKEY_OUTPUT";
  readonly EXPLORER_EVENT_LOG: "EXPLORER_EVENT_LOG";
  readonly EXPLORER_SUMMARY_LOG: "EXPLORER_SUMMARY_LOG";
  readonly INSTRUMENTATION_OUTPUT: "INSTRUMENTATION_OUTPUT";
  readonly MESSAGE_LOG: "MESSAGE_LOG";
  readonly RESULT_LOG: "RESULT_LOG";
  readonly SCREENSHOT: "SCREENSHOT";
  readonly SERVICE_LOG: "SERVICE_LOG";
  readonly TESTSPEC_OUTPUT: "TESTSPEC_OUTPUT";
  readonly UNKNOWN: "UNKNOWN";
  readonly VIDEO: "VIDEO";
  readonly VIDEO_LOG: "VIDEO_LOG";
  readonly WEBKIT_LOG: "WEBKIT_LOG";
  readonly XCTEST_LOG: "XCTEST_LOG";
};
export type ArtifactType = (typeof ArtifactType)[keyof typeof ArtifactType];
export interface Artifact {
  arn?: string | undefined;
  name?: string | undefined;
  type?: ArtifactType | undefined;
  extension?: string | undefined;
  url?: string | undefined;
}
export declare const ArtifactCategory: {
  readonly FILE: "FILE";
  readonly LOG: "LOG";
  readonly SCREENSHOT: "SCREENSHOT";
};
export type ArtifactCategory =
  (typeof ArtifactCategory)[keyof typeof ArtifactCategory];
export declare const BillingMethod: {
  readonly METERED: "METERED";
  readonly UNMETERED: "UNMETERED";
};
export type BillingMethod = (typeof BillingMethod)[keyof typeof BillingMethod];
export declare class CannotDeleteException extends __BaseException {
  readonly name: "CannotDeleteException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<CannotDeleteException, __BaseException>
  );
}
export interface Counters {
  total?: number | undefined;
  passed?: number | undefined;
  failed?: number | undefined;
  warned?: number | undefined;
  errored?: number | undefined;
  stopped?: number | undefined;
  skipped?: number | undefined;
}
export interface CPU {
  frequency?: string | undefined;
  architecture?: string | undefined;
  clock?: number | undefined;
}
export declare const DeviceAttribute: {
  readonly APPIUM_VERSION: "APPIUM_VERSION";
  readonly ARN: "ARN";
  readonly AVAILABILITY: "AVAILABILITY";
  readonly FLEET_TYPE: "FLEET_TYPE";
  readonly FORM_FACTOR: "FORM_FACTOR";
  readonly INSTANCE_ARN: "INSTANCE_ARN";
  readonly INSTANCE_LABELS: "INSTANCE_LABELS";
  readonly MANUFACTURER: "MANUFACTURER";
  readonly MODEL: "MODEL";
  readonly OS_VERSION: "OS_VERSION";
  readonly PLATFORM: "PLATFORM";
  readonly REMOTE_ACCESS_ENABLED: "REMOTE_ACCESS_ENABLED";
  readonly REMOTE_DEBUG_ENABLED: "REMOTE_DEBUG_ENABLED";
};
export type DeviceAttribute =
  (typeof DeviceAttribute)[keyof typeof DeviceAttribute];
export declare const RuleOperator: {
  readonly CONTAINS: "CONTAINS";
  readonly EQUALS: "EQUALS";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly GREATER_THAN_OR_EQUALS: "GREATER_THAN_OR_EQUALS";
  readonly IN: "IN";
  readonly LESS_THAN: "LESS_THAN";
  readonly LESS_THAN_OR_EQUALS: "LESS_THAN_OR_EQUALS";
  readonly NOT_IN: "NOT_IN";
};
export type RuleOperator = (typeof RuleOperator)[keyof typeof RuleOperator];
export interface Rule {
  attribute?: DeviceAttribute | undefined;
  operator?: RuleOperator | undefined;
  value?: string | undefined;
}
export interface CreateDevicePoolRequest {
  projectArn: string | undefined;
  name: string | undefined;
  description?: string | undefined;
  rules: Rule[] | undefined;
  maxDevices?: number | undefined;
}
export declare const DevicePoolType: {
  readonly CURATED: "CURATED";
  readonly PRIVATE: "PRIVATE";
};
export type DevicePoolType =
  (typeof DevicePoolType)[keyof typeof DevicePoolType];
export interface DevicePool {
  arn?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  type?: DevicePoolType | undefined;
  rules?: Rule[] | undefined;
  maxDevices?: number | undefined;
}
export interface CreateDevicePoolResult {
  devicePool?: DevicePool | undefined;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class ServiceAccountException extends __BaseException {
  readonly name: "ServiceAccountException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceAccountException, __BaseException>
  );
}
export interface CreateInstanceProfileRequest {
  name: string | undefined;
  description?: string | undefined;
  packageCleanup?: boolean | undefined;
  excludeAppPackagesFromCleanup?: string[] | undefined;
  rebootAfterUse?: boolean | undefined;
}
export interface InstanceProfile {
  arn?: string | undefined;
  packageCleanup?: boolean | undefined;
  excludeAppPackagesFromCleanup?: string[] | undefined;
  rebootAfterUse?: boolean | undefined;
  name?: string | undefined;
  description?: string | undefined;
}
export interface CreateInstanceProfileResult {
  instanceProfile?: InstanceProfile | undefined;
}
export declare const NetworkProfileType: {
  readonly CURATED: "CURATED";
  readonly PRIVATE: "PRIVATE";
};
export type NetworkProfileType =
  (typeof NetworkProfileType)[keyof typeof NetworkProfileType];
export interface CreateNetworkProfileRequest {
  projectArn: string | undefined;
  name: string | undefined;
  description?: string | undefined;
  type?: NetworkProfileType | undefined;
  uplinkBandwidthBits?: number | undefined;
  downlinkBandwidthBits?: number | undefined;
  uplinkDelayMs?: number | undefined;
  downlinkDelayMs?: number | undefined;
  uplinkJitterMs?: number | undefined;
  downlinkJitterMs?: number | undefined;
  uplinkLossPercent?: number | undefined;
  downlinkLossPercent?: number | undefined;
}
export interface NetworkProfile {
  arn?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  type?: NetworkProfileType | undefined;
  uplinkBandwidthBits?: number | undefined;
  downlinkBandwidthBits?: number | undefined;
  uplinkDelayMs?: number | undefined;
  downlinkDelayMs?: number | undefined;
  uplinkJitterMs?: number | undefined;
  downlinkJitterMs?: number | undefined;
  uplinkLossPercent?: number | undefined;
  downlinkLossPercent?: number | undefined;
}
export interface CreateNetworkProfileResult {
  networkProfile?: NetworkProfile | undefined;
}
export interface VpcConfig {
  securityGroupIds: string[] | undefined;
  subnetIds: string[] | undefined;
  vpcId: string | undefined;
}
export interface CreateProjectRequest {
  name: string | undefined;
  defaultJobTimeoutMinutes?: number | undefined;
  vpcConfig?: VpcConfig | undefined;
}
export interface Project {
  arn?: string | undefined;
  name?: string | undefined;
  defaultJobTimeoutMinutes?: number | undefined;
  created?: Date | undefined;
  vpcConfig?: VpcConfig | undefined;
}
export interface CreateProjectResult {
  project?: Project | undefined;
}
export declare class TagOperationException extends __BaseException {
  readonly name: "TagOperationException";
  readonly $fault: "client";
  resourceName?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TagOperationException, __BaseException>
  );
}
export interface DeviceProxy {
  host: string | undefined;
  port: number | undefined;
}
export interface CreateRemoteAccessSessionConfiguration {
  billingMethod?: BillingMethod | undefined;
  vpceConfigurationArns?: string[] | undefined;
  deviceProxy?: DeviceProxy | undefined;
}
export declare const InteractionMode: {
  readonly INTERACTIVE: "INTERACTIVE";
  readonly NO_VIDEO: "NO_VIDEO";
  readonly VIDEO_ONLY: "VIDEO_ONLY";
};
export type InteractionMode =
  (typeof InteractionMode)[keyof typeof InteractionMode];
export interface CreateRemoteAccessSessionRequest {
  projectArn: string | undefined;
  deviceArn: string | undefined;
  instanceArn?: string | undefined;
  sshPublicKey?: string | undefined;
  remoteDebugEnabled?: boolean | undefined;
  remoteRecordEnabled?: boolean | undefined;
  remoteRecordAppArn?: string | undefined;
  name?: string | undefined;
  clientId?: string | undefined;
  configuration?: CreateRemoteAccessSessionConfiguration | undefined;
  interactionMode?: InteractionMode | undefined;
  skipAppResign?: boolean | undefined;
}
export declare const DeviceAvailability: {
  readonly AVAILABLE: "AVAILABLE";
  readonly BUSY: "BUSY";
  readonly HIGHLY_AVAILABLE: "HIGHLY_AVAILABLE";
  readonly TEMPORARY_NOT_AVAILABLE: "TEMPORARY_NOT_AVAILABLE";
};
export type DeviceAvailability =
  (typeof DeviceAvailability)[keyof typeof DeviceAvailability];
export declare const DeviceFormFactor: {
  readonly PHONE: "PHONE";
  readonly TABLET: "TABLET";
};
export type DeviceFormFactor =
  (typeof DeviceFormFactor)[keyof typeof DeviceFormFactor];
export declare const InstanceStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly IN_USE: "IN_USE";
  readonly NOT_AVAILABLE: "NOT_AVAILABLE";
  readonly PREPARING: "PREPARING";
};
export type InstanceStatus =
  (typeof InstanceStatus)[keyof typeof InstanceStatus];
export interface DeviceInstance {
  arn?: string | undefined;
  deviceArn?: string | undefined;
  labels?: string[] | undefined;
  status?: InstanceStatus | undefined;
  udid?: string | undefined;
  instanceProfile?: InstanceProfile | undefined;
}
export interface Resolution {
  width?: number | undefined;
  height?: number | undefined;
}
export interface Device {
  arn?: string | undefined;
  name?: string | undefined;
  manufacturer?: string | undefined;
  model?: string | undefined;
  modelId?: string | undefined;
  formFactor?: DeviceFormFactor | undefined;
  platform?: DevicePlatform | undefined;
  os?: string | undefined;
  cpu?: CPU | undefined;
  resolution?: Resolution | undefined;
  heapSize?: number | undefined;
  memory?: number | undefined;
  image?: string | undefined;
  carrier?: string | undefined;
  radio?: string | undefined;
  remoteAccessEnabled?: boolean | undefined;
  remoteDebugEnabled?: boolean | undefined;
  fleetType?: string | undefined;
  fleetName?: string | undefined;
  instances?: DeviceInstance[] | undefined;
  availability?: DeviceAvailability | undefined;
}
export interface DeviceMinutes {
  total?: number | undefined;
  metered?: number | undefined;
  unmetered?: number | undefined;
}
export declare const ExecutionResult: {
  readonly ERRORED: "ERRORED";
  readonly FAILED: "FAILED";
  readonly PASSED: "PASSED";
  readonly PENDING: "PENDING";
  readonly SKIPPED: "SKIPPED";
  readonly STOPPED: "STOPPED";
  readonly WARNED: "WARNED";
};
export type ExecutionResult =
  (typeof ExecutionResult)[keyof typeof ExecutionResult];
export declare const ExecutionStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly PENDING: "PENDING";
  readonly PENDING_CONCURRNECY: "PENDING_CONCURRENCY";
  readonly PENDING_DEVICE: "PENDING_DEVICE";
  readonly PREPARING: "PREPARING";
  readonly PROCESSING: "PROCESSING";
  readonly RUNNING: "RUNNING";
  readonly SCHEDULING: "SCHEDULING";
  readonly STOPPING: "STOPPING";
};
export type ExecutionStatus =
  (typeof ExecutionStatus)[keyof typeof ExecutionStatus];
export interface RemoteAccessSession {
  arn?: string | undefined;
  name?: string | undefined;
  created?: Date | undefined;
  status?: ExecutionStatus | undefined;
  result?: ExecutionResult | undefined;
  message?: string | undefined;
  started?: Date | undefined;
  stopped?: Date | undefined;
  device?: Device | undefined;
  instanceArn?: string | undefined;
  remoteDebugEnabled?: boolean | undefined;
  remoteRecordEnabled?: boolean | undefined;
  remoteRecordAppArn?: string | undefined;
  hostAddress?: string | undefined;
  clientId?: string | undefined;
  billingMethod?: BillingMethod | undefined;
  deviceMinutes?: DeviceMinutes | undefined;
  endpoint?: string | undefined;
  deviceUdid?: string | undefined;
  interactionMode?: InteractionMode | undefined;
  skipAppResign?: boolean | undefined;
  vpcConfig?: VpcConfig | undefined;
  deviceProxy?: DeviceProxy | undefined;
}
export interface CreateRemoteAccessSessionResult {
  remoteAccessSession?: RemoteAccessSession | undefined;
}
export interface TestGridVpcConfig {
  securityGroupIds: string[] | undefined;
  subnetIds: string[] | undefined;
  vpcId: string | undefined;
}
export interface CreateTestGridProjectRequest {
  name: string | undefined;
  description?: string | undefined;
  vpcConfig?: TestGridVpcConfig | undefined;
}
export interface TestGridProject {
  arn?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  vpcConfig?: TestGridVpcConfig | undefined;
  created?: Date | undefined;
}
export interface CreateTestGridProjectResult {
  testGridProject?: TestGridProject | undefined;
}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export interface CreateTestGridUrlRequest {
  projectArn: string | undefined;
  expiresInSeconds: number | undefined;
}
export interface CreateTestGridUrlResult {
  url?: string | undefined;
  expires?: Date | undefined;
}
export declare const UploadType: {
  readonly ANDROID_APP: "ANDROID_APP";
  readonly APPIUM_JAVA_JUNIT_TEST_PACKAGE: "APPIUM_JAVA_JUNIT_TEST_PACKAGE";
  readonly APPIUM_JAVA_JUNIT_TEST_SPEC: "APPIUM_JAVA_JUNIT_TEST_SPEC";
  readonly APPIUM_JAVA_TESTNG_TEST_PACKAGE: "APPIUM_JAVA_TESTNG_TEST_PACKAGE";
  readonly APPIUM_JAVA_TESTNG_TEST_SPEC: "APPIUM_JAVA_TESTNG_TEST_SPEC";
  readonly APPIUM_NODE_TEST_PACKAGE: "APPIUM_NODE_TEST_PACKAGE";
  readonly APPIUM_NODE_TEST_SPEC: "APPIUM_NODE_TEST_SPEC";
  readonly APPIUM_PYTHON_TEST_PACKAGE: "APPIUM_PYTHON_TEST_PACKAGE";
  readonly APPIUM_PYTHON_TEST_SPEC: "APPIUM_PYTHON_TEST_SPEC";
  readonly APPIUM_RUBY_TEST_PACKAGE: "APPIUM_RUBY_TEST_PACKAGE";
  readonly APPIUM_RUBY_TEST_SPEC: "APPIUM_RUBY_TEST_SPEC";
  readonly APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE";
  readonly APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC";
  readonly APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE";
  readonly APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC";
  readonly APPIUM_WEB_NODE_TEST_PACKAGE: "APPIUM_WEB_NODE_TEST_PACKAGE";
  readonly APPIUM_WEB_NODE_TEST_SPEC: "APPIUM_WEB_NODE_TEST_SPEC";
  readonly APPIUM_WEB_PYTHON_TEST_PACKAGE: "APPIUM_WEB_PYTHON_TEST_PACKAGE";
  readonly APPIUM_WEB_PYTHON_TEST_SPEC: "APPIUM_WEB_PYTHON_TEST_SPEC";
  readonly APPIUM_WEB_RUBY_TEST_PACKAGE: "APPIUM_WEB_RUBY_TEST_PACKAGE";
  readonly APPIUM_WEB_RUBY_TEST_SPEC: "APPIUM_WEB_RUBY_TEST_SPEC";
  readonly CALABASH_TEST_PACKAGE: "CALABASH_TEST_PACKAGE";
  readonly EXTERNAL_DATA: "EXTERNAL_DATA";
  readonly INSTRUMENTATION_TEST_PACKAGE: "INSTRUMENTATION_TEST_PACKAGE";
  readonly INSTRUMENTATION_TEST_SPEC: "INSTRUMENTATION_TEST_SPEC";
  readonly IOS_APP: "IOS_APP";
  readonly UIAUTOMATION_TEST_PACKAGE: "UIAUTOMATION_TEST_PACKAGE";
  readonly UIAUTOMATOR_TEST_PACKAGE: "UIAUTOMATOR_TEST_PACKAGE";
  readonly WEB_APP: "WEB_APP";
  readonly XCTEST_TEST_PACKAGE: "XCTEST_TEST_PACKAGE";
  readonly XCTEST_UI_TEST_PACKAGE: "XCTEST_UI_TEST_PACKAGE";
  readonly XCTEST_UI_TEST_SPEC: "XCTEST_UI_TEST_SPEC";
};
export type UploadType = (typeof UploadType)[keyof typeof UploadType];
export interface CreateUploadRequest {
  projectArn: string | undefined;
  name: string | undefined;
  type: UploadType | undefined;
  contentType?: string | undefined;
}
export declare const UploadCategory: {
  readonly CURATED: "CURATED";
  readonly PRIVATE: "PRIVATE";
};
export type UploadCategory =
  (typeof UploadCategory)[keyof typeof UploadCategory];
export declare const UploadStatus: {
  readonly FAILED: "FAILED";
  readonly INITIALIZED: "INITIALIZED";
  readonly PROCESSING: "PROCESSING";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type UploadStatus = (typeof UploadStatus)[keyof typeof UploadStatus];
export interface Upload {
  arn?: string | undefined;
  name?: string | undefined;
  created?: Date | undefined;
  type?: UploadType | undefined;
  status?: UploadStatus | undefined;
  url?: string | undefined;
  metadata?: string | undefined;
  contentType?: string | undefined;
  message?: string | undefined;
  category?: UploadCategory | undefined;
}
export interface CreateUploadResult {
  upload?: Upload | undefined;
}
export interface CreateVPCEConfigurationRequest {
  vpceConfigurationName: string | undefined;
  vpceServiceName: string | undefined;
  serviceDnsName: string | undefined;
  vpceConfigurationDescription?: string | undefined;
}
export interface VPCEConfiguration {
  arn?: string | undefined;
  vpceConfigurationName?: string | undefined;
  vpceServiceName?: string | undefined;
  serviceDnsName?: string | undefined;
  vpceConfigurationDescription?: string | undefined;
}
export interface CreateVPCEConfigurationResult {
  vpceConfiguration?: VPCEConfiguration | undefined;
}
export declare const CurrencyCode: {
  readonly USD: "USD";
};
export type CurrencyCode = (typeof CurrencyCode)[keyof typeof CurrencyCode];
export interface CustomerArtifactPaths {
  iosPaths?: string[] | undefined;
  androidPaths?: string[] | undefined;
  deviceHostPaths?: string[] | undefined;
}
export interface DeleteDevicePoolRequest {
  arn: string | undefined;
}
export interface DeleteDevicePoolResult {}
export interface DeleteInstanceProfileRequest {
  arn: string | undefined;
}
export interface DeleteInstanceProfileResult {}
export interface DeleteNetworkProfileRequest {
  arn: string | undefined;
}
export interface DeleteNetworkProfileResult {}
export interface DeleteProjectRequest {
  arn: string | undefined;
}
export interface DeleteProjectResult {}
export interface DeleteRemoteAccessSessionRequest {
  arn: string | undefined;
}
export interface DeleteRemoteAccessSessionResult {}
export interface DeleteRunRequest {
  arn: string | undefined;
}
export interface DeleteRunResult {}
export interface DeleteTestGridProjectRequest {
  projectArn: string | undefined;
}
export interface DeleteTestGridProjectResult {}
export interface DeleteUploadRequest {
  arn: string | undefined;
}
export interface DeleteUploadResult {}
export interface DeleteVPCEConfigurationRequest {
  arn: string | undefined;
}
export interface DeleteVPCEConfigurationResult {}
export declare class InvalidOperationException extends __BaseException {
  readonly name: "InvalidOperationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidOperationException, __BaseException>
  );
}
export interface GetAccountSettingsRequest {}
export interface GetAccountSettingsResult {
  accountSettings?: AccountSettings | undefined;
}
export interface GetDeviceRequest {
  arn: string | undefined;
}
export interface GetDeviceResult {
  device?: Device | undefined;
}
export interface GetDeviceInstanceRequest {
  arn: string | undefined;
}
export interface GetDeviceInstanceResult {
  deviceInstance?: DeviceInstance | undefined;
}
export interface GetDevicePoolRequest {
  arn: string | undefined;
}
export interface GetDevicePoolResult {
  devicePool?: DevicePool | undefined;
}
export interface Location {
  latitude: number | undefined;
  longitude: number | undefined;
}
export interface Radios {
  wifi?: boolean | undefined;
  bluetooth?: boolean | undefined;
  nfc?: boolean | undefined;
  gps?: boolean | undefined;
}
export interface ScheduleRunConfiguration {
  extraDataPackageArn?: string | undefined;
  networkProfileArn?: string | undefined;
  locale?: string | undefined;
  location?: Location | undefined;
  vpceConfigurationArns?: string[] | undefined;
  deviceProxy?: DeviceProxy | undefined;
  customerArtifactPaths?: CustomerArtifactPaths | undefined;
  radios?: Radios | undefined;
  auxiliaryApps?: string[] | undefined;
  billingMethod?: BillingMethod | undefined;
}
export declare const TestType: {
  readonly APPIUM_JAVA_JUNIT: "APPIUM_JAVA_JUNIT";
  readonly APPIUM_JAVA_TESTNG: "APPIUM_JAVA_TESTNG";
  readonly APPIUM_NODE: "APPIUM_NODE";
  readonly APPIUM_PYTHON: "APPIUM_PYTHON";
  readonly APPIUM_RUBY: "APPIUM_RUBY";
  readonly APPIUM_WEB_JAVA_JUNIT: "APPIUM_WEB_JAVA_JUNIT";
  readonly APPIUM_WEB_JAVA_TESTNG: "APPIUM_WEB_JAVA_TESTNG";
  readonly APPIUM_WEB_NODE: "APPIUM_WEB_NODE";
  readonly APPIUM_WEB_PYTHON: "APPIUM_WEB_PYTHON";
  readonly APPIUM_WEB_RUBY: "APPIUM_WEB_RUBY";
  readonly BUILTIN_FUZZ: "BUILTIN_FUZZ";
  readonly INSTRUMENTATION: "INSTRUMENTATION";
  readonly XCTEST: "XCTEST";
  readonly XCTEST_UI: "XCTEST_UI";
};
export type TestType = (typeof TestType)[keyof typeof TestType];
export interface ScheduleRunTest {
  type: TestType | undefined;
  testPackageArn?: string | undefined;
  testSpecArn?: string | undefined;
  filter?: string | undefined;
  parameters?: Record<string, string> | undefined;
}
export interface GetDevicePoolCompatibilityRequest {
  devicePoolArn: string | undefined;
  appArn?: string | undefined;
  testType?: TestType | undefined;
  test?: ScheduleRunTest | undefined;
  configuration?: ScheduleRunConfiguration | undefined;
  projectArn?: string | undefined;
}
export interface IncompatibilityMessage {
  message?: string | undefined;
  type?: DeviceAttribute | undefined;
}
export interface DevicePoolCompatibilityResult {
  device?: Device | undefined;
  compatible?: boolean | undefined;
  incompatibilityMessages?: IncompatibilityMessage[] | undefined;
}
export interface GetDevicePoolCompatibilityResult {
  compatibleDevices?: DevicePoolCompatibilityResult[] | undefined;
  incompatibleDevices?: DevicePoolCompatibilityResult[] | undefined;
}
export interface GetInstanceProfileRequest {
  arn: string | undefined;
}
export interface GetInstanceProfileResult {
  instanceProfile?: InstanceProfile | undefined;
}
export interface GetJobRequest {
  arn: string | undefined;
}
export interface Job {
  arn?: string | undefined;
  name?: string | undefined;
  type?: TestType | undefined;
  created?: Date | undefined;
  status?: ExecutionStatus | undefined;
  result?: ExecutionResult | undefined;
  started?: Date | undefined;
  stopped?: Date | undefined;
  counters?: Counters | undefined;
  message?: string | undefined;
  device?: Device | undefined;
  instanceArn?: string | undefined;
  deviceMinutes?: DeviceMinutes | undefined;
  videoEndpoint?: string | undefined;
  videoCapture?: boolean | undefined;
}
export interface GetJobResult {
  job?: Job | undefined;
}
export interface GetNetworkProfileRequest {
  arn: string | undefined;
}
export interface GetNetworkProfileResult {
  networkProfile?: NetworkProfile | undefined;
}
export interface GetOfferingStatusRequest {
  nextToken?: string | undefined;
}
export interface MonetaryAmount {
  amount?: number | undefined;
  currencyCode?: CurrencyCode | undefined;
}
export declare const RecurringChargeFrequency: {
  readonly MONTHLY: "MONTHLY";
};
export type RecurringChargeFrequency =
  (typeof RecurringChargeFrequency)[keyof typeof RecurringChargeFrequency];
export interface RecurringCharge {
  cost?: MonetaryAmount | undefined;
  frequency?: RecurringChargeFrequency | undefined;
}
export declare const OfferingType: {
  readonly RECURRING: "RECURRING";
};
export type OfferingType = (typeof OfferingType)[keyof typeof OfferingType];
export interface Offering {
  id?: string | undefined;
  description?: string | undefined;
  type?: OfferingType | undefined;
  platform?: DevicePlatform | undefined;
  recurringCharges?: RecurringCharge[] | undefined;
}
export declare const OfferingTransactionType: {
  readonly PURCHASE: "PURCHASE";
  readonly RENEW: "RENEW";
  readonly SYSTEM: "SYSTEM";
};
export type OfferingTransactionType =
  (typeof OfferingTransactionType)[keyof typeof OfferingTransactionType];
export interface OfferingStatus {
  type?: OfferingTransactionType | undefined;
  offering?: Offering | undefined;
  quantity?: number | undefined;
  effectiveOn?: Date | undefined;
}
export interface GetOfferingStatusResult {
  current?: Record<string, OfferingStatus> | undefined;
  nextPeriod?: Record<string, OfferingStatus> | undefined;
  nextToken?: string | undefined;
}
export declare class NotEligibleException extends __BaseException {
  readonly name: "NotEligibleException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NotEligibleException, __BaseException>
  );
}
export interface GetProjectRequest {
  arn: string | undefined;
}
export interface GetProjectResult {
  project?: Project | undefined;
}
export interface GetRemoteAccessSessionRequest {
  arn: string | undefined;
}
export interface GetRemoteAccessSessionResult {
  remoteAccessSession?: RemoteAccessSession | undefined;
}
export interface GetRunRequest {
  arn: string | undefined;
}
export declare const DeviceFilterAttribute: {
  readonly ARN: "ARN";
  readonly AVAILABILITY: "AVAILABILITY";
  readonly FLEET_TYPE: "FLEET_TYPE";
  readonly FORM_FACTOR: "FORM_FACTOR";
  readonly INSTANCE_ARN: "INSTANCE_ARN";
  readonly INSTANCE_LABELS: "INSTANCE_LABELS";
  readonly MANUFACTURER: "MANUFACTURER";
  readonly MODEL: "MODEL";
  readonly OS_VERSION: "OS_VERSION";
  readonly PLATFORM: "PLATFORM";
  readonly REMOTE_ACCESS_ENABLED: "REMOTE_ACCESS_ENABLED";
  readonly REMOTE_DEBUG_ENABLED: "REMOTE_DEBUG_ENABLED";
};
export type DeviceFilterAttribute =
  (typeof DeviceFilterAttribute)[keyof typeof DeviceFilterAttribute];
export interface DeviceFilter {
  attribute: DeviceFilterAttribute | undefined;
  operator: RuleOperator | undefined;
  values: string[] | undefined;
}
export interface DeviceSelectionResult {
  filters?: DeviceFilter[] | undefined;
  matchedDevicesCount?: number | undefined;
  maxDevices?: number | undefined;
}
export declare const ExecutionResultCode: {
  readonly PARSING_FAILED: "PARSING_FAILED";
  readonly VPC_ENDPOINT_SETUP_FAILED: "VPC_ENDPOINT_SETUP_FAILED";
};
export type ExecutionResultCode =
  (typeof ExecutionResultCode)[keyof typeof ExecutionResultCode];
export interface Run {
  arn?: string | undefined;
  name?: string | undefined;
  type?: TestType | undefined;
  platform?: DevicePlatform | undefined;
  created?: Date | undefined;
  status?: ExecutionStatus | undefined;
  result?: ExecutionResult | undefined;
  started?: Date | undefined;
  stopped?: Date | undefined;
  counters?: Counters | undefined;
  message?: string | undefined;
  totalJobs?: number | undefined;
  completedJobs?: number | undefined;
  billingMethod?: BillingMethod | undefined;
  deviceMinutes?: DeviceMinutes | undefined;
  networkProfile?: NetworkProfile | undefined;
  deviceProxy?: DeviceProxy | undefined;
  parsingResultUrl?: string | undefined;
  resultCode?: ExecutionResultCode | undefined;
  seed?: number | undefined;
  appUpload?: string | undefined;
  eventCount?: number | undefined;
  jobTimeoutMinutes?: number | undefined;
  devicePoolArn?: string | undefined;
  locale?: string | undefined;
  radios?: Radios | undefined;
  location?: Location | undefined;
  customerArtifactPaths?: CustomerArtifactPaths | undefined;
  webUrl?: string | undefined;
  skipAppResign?: boolean | undefined;
  testSpecArn?: string | undefined;
  deviceSelectionResult?: DeviceSelectionResult | undefined;
  vpcConfig?: VpcConfig | undefined;
}
export interface GetRunResult {
  run?: Run | undefined;
}
export interface GetSuiteRequest {
  arn: string | undefined;
}
export interface Suite {
  arn?: string | undefined;
  name?: string | undefined;
  type?: TestType | undefined;
  created?: Date | undefined;
  status?: ExecutionStatus | undefined;
  result?: ExecutionResult | undefined;
  started?: Date | undefined;
  stopped?: Date | undefined;
  counters?: Counters | undefined;
  message?: string | undefined;
  deviceMinutes?: DeviceMinutes | undefined;
}
export interface GetSuiteResult {
  suite?: Suite | undefined;
}
export interface GetTestRequest {
  arn: string | undefined;
}
export interface Test {
  arn?: string | undefined;
  name?: string | undefined;
  type?: TestType | undefined;
  created?: Date | undefined;
  status?: ExecutionStatus | undefined;
  result?: ExecutionResult | undefined;
  started?: Date | undefined;
  stopped?: Date | undefined;
  counters?: Counters | undefined;
  message?: string | undefined;
  deviceMinutes?: DeviceMinutes | undefined;
}
export interface GetTestResult {
  test?: Test | undefined;
}
export interface GetTestGridProjectRequest {
  projectArn: string | undefined;
}
export interface GetTestGridProjectResult {
  testGridProject?: TestGridProject | undefined;
}
export interface GetTestGridSessionRequest {
  projectArn?: string | undefined;
  sessionId?: string | undefined;
  sessionArn?: string | undefined;
}
export declare const TestGridSessionStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CLOSED: "CLOSED";
  readonly ERRORED: "ERRORED";
};
export type TestGridSessionStatus =
  (typeof TestGridSessionStatus)[keyof typeof TestGridSessionStatus];
export interface TestGridSession {
  arn?: string | undefined;
  status?: TestGridSessionStatus | undefined;
  created?: Date | undefined;
  ended?: Date | undefined;
  billingMinutes?: number | undefined;
  seleniumProperties?: string | undefined;
}
export interface GetTestGridSessionResult {
  testGridSession?: TestGridSession | undefined;
}
export interface GetUploadRequest {
  arn: string | undefined;
}
export interface GetUploadResult {
  upload?: Upload | undefined;
}
export interface GetVPCEConfigurationRequest {
  arn: string | undefined;
}
export interface GetVPCEConfigurationResult {
  vpceConfiguration?: VPCEConfiguration | undefined;
}
export interface InstallToRemoteAccessSessionRequest {
  remoteAccessSessionArn: string | undefined;
  appArn: string | undefined;
}
export interface InstallToRemoteAccessSessionResult {
  appUpload?: Upload | undefined;
}
export interface ListArtifactsRequest {
  arn: string | undefined;
  type: ArtifactCategory | undefined;
  nextToken?: string | undefined;
}
export interface ListArtifactsResult {
  artifacts?: Artifact[] | undefined;
  nextToken?: string | undefined;
}
export interface ListDeviceInstancesRequest {
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListDeviceInstancesResult {
  deviceInstances?: DeviceInstance[] | undefined;
  nextToken?: string | undefined;
}
export interface ListDevicePoolsRequest {
  arn: string | undefined;
  type?: DevicePoolType | undefined;
  nextToken?: string | undefined;
}
export interface ListDevicePoolsResult {
  devicePools?: DevicePool[] | undefined;
  nextToken?: string | undefined;
}
export interface ListDevicesRequest {
  arn?: string | undefined;
  nextToken?: string | undefined;
  filters?: DeviceFilter[] | undefined;
}
export interface ListDevicesResult {
  devices?: Device[] | undefined;
  nextToken?: string | undefined;
}
export interface ListInstanceProfilesRequest {
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListInstanceProfilesResult {
  instanceProfiles?: InstanceProfile[] | undefined;
  nextToken?: string | undefined;
}
export interface ListJobsRequest {
  arn: string | undefined;
  nextToken?: string | undefined;
}
export interface ListJobsResult {
  jobs?: Job[] | undefined;
  nextToken?: string | undefined;
}
export interface ListNetworkProfilesRequest {
  arn: string | undefined;
  type?: NetworkProfileType | undefined;
  nextToken?: string | undefined;
}
export interface ListNetworkProfilesResult {
  networkProfiles?: NetworkProfile[] | undefined;
  nextToken?: string | undefined;
}
export interface ListOfferingPromotionsRequest {
  nextToken?: string | undefined;
}
export interface OfferingPromotion {
  id?: string | undefined;
  description?: string | undefined;
}
export interface ListOfferingPromotionsResult {
  offeringPromotions?: OfferingPromotion[] | undefined;
  nextToken?: string | undefined;
}
export interface ListOfferingsRequest {
  nextToken?: string | undefined;
}
export interface ListOfferingsResult {
  offerings?: Offering[] | undefined;
  nextToken?: string | undefined;
}
export interface ListOfferingTransactionsRequest {
  nextToken?: string | undefined;
}
export interface OfferingTransaction {
  offeringStatus?: OfferingStatus | undefined;
  transactionId?: string | undefined;
  offeringPromotionId?: string | undefined;
  createdOn?: Date | undefined;
  cost?: MonetaryAmount | undefined;
}
export interface ListOfferingTransactionsResult {
  offeringTransactions?: OfferingTransaction[] | undefined;
  nextToken?: string | undefined;
}
export interface ListProjectsRequest {
  arn?: string | undefined;
  nextToken?: string | undefined;
}
export interface ListProjectsResult {
  projects?: Project[] | undefined;
  nextToken?: string | undefined;
}
export interface ListRemoteAccessSessionsRequest {
  arn: string | undefined;
  nextToken?: string | undefined;
}
export interface ListRemoteAccessSessionsResult {
  remoteAccessSessions?: RemoteAccessSession[] | undefined;
  nextToken?: string | undefined;
}
export interface ListRunsRequest {
  arn: string | undefined;
  nextToken?: string | undefined;
}
export interface ListRunsResult {
  runs?: Run[] | undefined;
  nextToken?: string | undefined;
}
export interface ListSamplesRequest {
  arn: string | undefined;
  nextToken?: string | undefined;
}
export declare const SampleType: {
  readonly CPU: "CPU";
  readonly MEMORY: "MEMORY";
  readonly NATIVE_AVG_DRAWTIME: "NATIVE_AVG_DRAWTIME";
  readonly NATIVE_FPS: "NATIVE_FPS";
  readonly NATIVE_FRAMES: "NATIVE_FRAMES";
  readonly NATIVE_MAX_DRAWTIME: "NATIVE_MAX_DRAWTIME";
  readonly NATIVE_MIN_DRAWTIME: "NATIVE_MIN_DRAWTIME";
  readonly OPENGL_AVG_DRAWTIME: "OPENGL_AVG_DRAWTIME";
  readonly OPENGL_FPS: "OPENGL_FPS";
  readonly OPENGL_FRAMES: "OPENGL_FRAMES";
  readonly OPENGL_MAX_DRAWTIME: "OPENGL_MAX_DRAWTIME";
  readonly OPENGL_MIN_DRAWTIME: "OPENGL_MIN_DRAWTIME";
  readonly RX: "RX";
  readonly RX_RATE: "RX_RATE";
  readonly THREADS: "THREADS";
  readonly TX: "TX";
  readonly TX_RATE: "TX_RATE";
};
export type SampleType = (typeof SampleType)[keyof typeof SampleType];
export interface Sample {
  arn?: string | undefined;
  type?: SampleType | undefined;
  url?: string | undefined;
}
export interface ListSamplesResult {
  samples?: Sample[] | undefined;
  nextToken?: string | undefined;
}
export interface ListSuitesRequest {
  arn: string | undefined;
  nextToken?: string | undefined;
}
export interface ListSuitesResult {
  suites?: Suite[] | undefined;
  nextToken?: string | undefined;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[] | undefined;
}
export interface ListTestGridProjectsRequest {
  maxResult?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListTestGridProjectsResult {
  testGridProjects?: TestGridProject[] | undefined;
  nextToken?: string | undefined;
}
export interface ListTestGridSessionActionsRequest {
  sessionArn: string | undefined;
  maxResult?: number | undefined;
  nextToken?: string | undefined;
}
export interface TestGridSessionAction {
  action?: string | undefined;
  started?: Date | undefined;
  duration?: number | undefined;
  statusCode?: string | undefined;
  requestMethod?: string | undefined;
}
export interface ListTestGridSessionActionsResult {
  actions?: TestGridSessionAction[] | undefined;
  nextToken?: string | undefined;
}
export declare const TestGridSessionArtifactCategory: {
  readonly LOG: "LOG";
  readonly VIDEO: "VIDEO";
};
export type TestGridSessionArtifactCategory =
  (typeof TestGridSessionArtifactCategory)[keyof typeof TestGridSessionArtifactCategory];
export interface ListTestGridSessionArtifactsRequest {
  sessionArn: string | undefined;
  type?: TestGridSessionArtifactCategory | undefined;
  maxResult?: number | undefined;
  nextToken?: string | undefined;
}
export declare const TestGridSessionArtifactType: {
  readonly SELENIUM_LOG: "SELENIUM_LOG";
  readonly UNKNOWN: "UNKNOWN";
  readonly VIDEO: "VIDEO";
};
export type TestGridSessionArtifactType =
  (typeof TestGridSessionArtifactType)[keyof typeof TestGridSessionArtifactType];
export interface TestGridSessionArtifact {
  filename?: string | undefined;
  type?: TestGridSessionArtifactType | undefined;
  url?: string | undefined;
}
export interface ListTestGridSessionArtifactsResult {
  artifacts?: TestGridSessionArtifact[] | undefined;
  nextToken?: string | undefined;
}
export interface ListTestGridSessionsRequest {
  projectArn: string | undefined;
  status?: TestGridSessionStatus | undefined;
  creationTimeAfter?: Date | undefined;
  creationTimeBefore?: Date | undefined;
  endTimeAfter?: Date | undefined;
  endTimeBefore?: Date | undefined;
  maxResult?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListTestGridSessionsResult {
  testGridSessions?: TestGridSession[] | undefined;
  nextToken?: string | undefined;
}
export interface ListTestsRequest {
  arn: string | undefined;
  nextToken?: string | undefined;
}
export interface ListTestsResult {
  tests?: Test[] | undefined;
  nextToken?: string | undefined;
}
export interface ListUniqueProblemsRequest {
  arn: string | undefined;
  nextToken?: string | undefined;
}
export interface ProblemDetail {
  arn?: string | undefined;
  name?: string | undefined;
}
export interface Problem {
  run?: ProblemDetail | undefined;
  job?: ProblemDetail | undefined;
  suite?: ProblemDetail | undefined;
  test?: ProblemDetail | undefined;
  device?: Device | undefined;
  result?: ExecutionResult | undefined;
  message?: string | undefined;
}
export interface UniqueProblem {
  message?: string | undefined;
  problems?: Problem[] | undefined;
}
export interface ListUniqueProblemsResult {
  uniqueProblems?:
    | Partial<Record<ExecutionResult, UniqueProblem[]>>
    | undefined;
  nextToken?: string | undefined;
}
export interface ListUploadsRequest {
  arn: string | undefined;
  type?: UploadType | undefined;
  nextToken?: string | undefined;
}
export interface ListUploadsResult {
  uploads?: Upload[] | undefined;
  nextToken?: string | undefined;
}
export interface ListVPCEConfigurationsRequest {
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListVPCEConfigurationsResult {
  vpceConfigurations?: VPCEConfiguration[] | undefined;
  nextToken?: string | undefined;
}
export interface PurchaseOfferingRequest {
  offeringId: string | undefined;
  quantity: number | undefined;
  offeringPromotionId?: string | undefined;
}
export interface PurchaseOfferingResult {
  offeringTransaction?: OfferingTransaction | undefined;
}
export interface RenewOfferingRequest {
  offeringId: string | undefined;
  quantity: number | undefined;
}
export interface RenewOfferingResult {
  offeringTransaction?: OfferingTransaction | undefined;
}
export declare class IdempotencyException extends __BaseException {
  readonly name: "IdempotencyException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IdempotencyException, __BaseException>
  );
}
export interface DeviceSelectionConfiguration {
  filters: DeviceFilter[] | undefined;
  maxDevices: number | undefined;
}
export interface ExecutionConfiguration {
  jobTimeoutMinutes?: number | undefined;
  accountsCleanup?: boolean | undefined;
  appPackagesCleanup?: boolean | undefined;
  videoCapture?: boolean | undefined;
  skipAppResign?: boolean | undefined;
}
export interface ScheduleRunRequest {
  projectArn: string | undefined;
  appArn?: string | undefined;
  devicePoolArn?: string | undefined;
  deviceSelectionConfiguration?: DeviceSelectionConfiguration | undefined;
  name?: string | undefined;
  test: ScheduleRunTest | undefined;
  configuration?: ScheduleRunConfiguration | undefined;
  executionConfiguration?: ExecutionConfiguration | undefined;
}
export interface ScheduleRunResult {
  run?: Run | undefined;
}
export interface StopJobRequest {
  arn: string | undefined;
}
export interface StopJobResult {
  job?: Job | undefined;
}
export interface StopRemoteAccessSessionRequest {
  arn: string | undefined;
}
export interface StopRemoteAccessSessionResult {
  remoteAccessSession?: RemoteAccessSession | undefined;
}
export interface StopRunRequest {
  arn: string | undefined;
}
export interface StopRunResult {
  run?: Run | undefined;
}
export declare class TagPolicyException extends __BaseException {
  readonly name: "TagPolicyException";
  readonly $fault: "client";
  resourceName?: string | undefined;
  constructor(opts: __ExceptionOptionType<TagPolicyException, __BaseException>);
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  resourceName?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDeviceInstanceRequest {
  arn: string | undefined;
  profileArn?: string | undefined;
  labels?: string[] | undefined;
}
export interface UpdateDeviceInstanceResult {
  deviceInstance?: DeviceInstance | undefined;
}
export interface UpdateDevicePoolRequest {
  arn: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  rules?: Rule[] | undefined;
  maxDevices?: number | undefined;
  clearMaxDevices?: boolean | undefined;
}
export interface UpdateDevicePoolResult {
  devicePool?: DevicePool | undefined;
}
export interface UpdateInstanceProfileRequest {
  arn: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  packageCleanup?: boolean | undefined;
  excludeAppPackagesFromCleanup?: string[] | undefined;
  rebootAfterUse?: boolean | undefined;
}
export interface UpdateInstanceProfileResult {
  instanceProfile?: InstanceProfile | undefined;
}
export interface UpdateNetworkProfileRequest {
  arn: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  type?: NetworkProfileType | undefined;
  uplinkBandwidthBits?: number | undefined;
  downlinkBandwidthBits?: number | undefined;
  uplinkDelayMs?: number | undefined;
  downlinkDelayMs?: number | undefined;
  uplinkJitterMs?: number | undefined;
  downlinkJitterMs?: number | undefined;
  uplinkLossPercent?: number | undefined;
  downlinkLossPercent?: number | undefined;
}
export interface UpdateNetworkProfileResult {
  networkProfile?: NetworkProfile | undefined;
}
export interface UpdateProjectRequest {
  arn: string | undefined;
  name?: string | undefined;
  defaultJobTimeoutMinutes?: number | undefined;
  vpcConfig?: VpcConfig | undefined;
}
export interface UpdateProjectResult {
  project?: Project | undefined;
}
export interface UpdateTestGridProjectRequest {
  projectArn: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  vpcConfig?: TestGridVpcConfig | undefined;
}
export interface UpdateTestGridProjectResult {
  testGridProject?: TestGridProject | undefined;
}
export interface UpdateUploadRequest {
  arn: string | undefined;
  name?: string | undefined;
  contentType?: string | undefined;
  editContent?: boolean | undefined;
}
export interface UpdateUploadResult {
  upload?: Upload | undefined;
}
export interface UpdateVPCEConfigurationRequest {
  arn: string | undefined;
  vpceConfigurationName?: string | undefined;
  vpceServiceName?: string | undefined;
  serviceDnsName?: string | undefined;
  vpceConfigurationDescription?: string | undefined;
}
export interface UpdateVPCEConfigurationResult {
  vpceConfiguration?: VPCEConfiguration | undefined;
}
export declare const CreateTestGridUrlResultFilterSensitiveLog: (
  obj: CreateTestGridUrlResult
) => any;
export declare const UploadFilterSensitiveLog: (obj: Upload) => any;
export declare const CreateUploadResultFilterSensitiveLog: (
  obj: CreateUploadResult
) => any;
export declare const GetUploadResultFilterSensitiveLog: (
  obj: GetUploadResult
) => any;
export declare const InstallToRemoteAccessSessionResultFilterSensitiveLog: (
  obj: InstallToRemoteAccessSessionResult
) => any;
export declare const TestGridSessionArtifactFilterSensitiveLog: (
  obj: TestGridSessionArtifact
) => any;
export declare const ListTestGridSessionArtifactsResultFilterSensitiveLog: (
  obj: ListTestGridSessionArtifactsResult
) => any;
export declare const ListUploadsResultFilterSensitiveLog: (
  obj: ListUploadsResult
) => any;
export declare const UpdateUploadResultFilterSensitiveLog: (
  obj: UpdateUploadResult
) => any;
