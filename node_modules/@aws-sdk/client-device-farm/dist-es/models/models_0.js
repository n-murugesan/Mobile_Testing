import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { DeviceFarmServiceException as __BaseException } from "./DeviceFarmServiceException";
export const DevicePlatform = {
    ANDROID: "ANDROID",
    IOS: "IOS",
};
export class ArgumentException extends __BaseException {
    name = "ArgumentException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ArgumentException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ArgumentException.prototype);
    }
}
export const ArtifactType = {
    APPIUM_JAVA_OUTPUT: "APPIUM_JAVA_OUTPUT",
    APPIUM_JAVA_XML_OUTPUT: "APPIUM_JAVA_XML_OUTPUT",
    APPIUM_PYTHON_OUTPUT: "APPIUM_PYTHON_OUTPUT",
    APPIUM_PYTHON_XML_OUTPUT: "APPIUM_PYTHON_XML_OUTPUT",
    APPIUM_SERVER_OUTPUT: "APPIUM_SERVER_OUTPUT",
    APPLICATION_CRASH_REPORT: "APPLICATION_CRASH_REPORT",
    AUTOMATION_OUTPUT: "AUTOMATION_OUTPUT",
    CALABASH_JAVA_XML_OUTPUT: "CALABASH_JAVA_XML_OUTPUT",
    CALABASH_JSON_OUTPUT: "CALABASH_JSON_OUTPUT",
    CALABASH_PRETTY_OUTPUT: "CALABASH_PRETTY_OUTPUT",
    CALABASH_STANDARD_OUTPUT: "CALABASH_STANDARD_OUTPUT",
    CUSTOMER_ARTIFACT: "CUSTOMER_ARTIFACT",
    CUSTOMER_ARTIFACT_LOG: "CUSTOMER_ARTIFACT_LOG",
    DEVICE_LOG: "DEVICE_LOG",
    EXERCISER_MONKEY_OUTPUT: "EXERCISER_MONKEY_OUTPUT",
    EXPLORER_EVENT_LOG: "EXPLORER_EVENT_LOG",
    EXPLORER_SUMMARY_LOG: "EXPLORER_SUMMARY_LOG",
    INSTRUMENTATION_OUTPUT: "INSTRUMENTATION_OUTPUT",
    MESSAGE_LOG: "MESSAGE_LOG",
    RESULT_LOG: "RESULT_LOG",
    SCREENSHOT: "SCREENSHOT",
    SERVICE_LOG: "SERVICE_LOG",
    TESTSPEC_OUTPUT: "TESTSPEC_OUTPUT",
    UNKNOWN: "UNKNOWN",
    VIDEO: "VIDEO",
    VIDEO_LOG: "VIDEO_LOG",
    WEBKIT_LOG: "WEBKIT_LOG",
    XCTEST_LOG: "XCTEST_LOG",
};
export const ArtifactCategory = {
    FILE: "FILE",
    LOG: "LOG",
    SCREENSHOT: "SCREENSHOT",
};
export const BillingMethod = {
    METERED: "METERED",
    UNMETERED: "UNMETERED",
};
export class CannotDeleteException extends __BaseException {
    name = "CannotDeleteException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "CannotDeleteException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CannotDeleteException.prototype);
    }
}
export const DeviceAttribute = {
    APPIUM_VERSION: "APPIUM_VERSION",
    ARN: "ARN",
    AVAILABILITY: "AVAILABILITY",
    FLEET_TYPE: "FLEET_TYPE",
    FORM_FACTOR: "FORM_FACTOR",
    INSTANCE_ARN: "INSTANCE_ARN",
    INSTANCE_LABELS: "INSTANCE_LABELS",
    MANUFACTURER: "MANUFACTURER",
    MODEL: "MODEL",
    OS_VERSION: "OS_VERSION",
    PLATFORM: "PLATFORM",
    REMOTE_ACCESS_ENABLED: "REMOTE_ACCESS_ENABLED",
    REMOTE_DEBUG_ENABLED: "REMOTE_DEBUG_ENABLED",
};
export const RuleOperator = {
    CONTAINS: "CONTAINS",
    EQUALS: "EQUALS",
    GREATER_THAN: "GREATER_THAN",
    GREATER_THAN_OR_EQUALS: "GREATER_THAN_OR_EQUALS",
    IN: "IN",
    LESS_THAN: "LESS_THAN",
    LESS_THAN_OR_EQUALS: "LESS_THAN_OR_EQUALS",
    NOT_IN: "NOT_IN",
};
export const DevicePoolType = {
    CURATED: "CURATED",
    PRIVATE: "PRIVATE",
};
export class LimitExceededException extends __BaseException {
    name = "LimitExceededException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class NotFoundException extends __BaseException {
    name = "NotFoundException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotFoundException.prototype);
    }
}
export class ServiceAccountException extends __BaseException {
    name = "ServiceAccountException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ServiceAccountException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceAccountException.prototype);
    }
}
export const NetworkProfileType = {
    CURATED: "CURATED",
    PRIVATE: "PRIVATE",
};
export class TagOperationException extends __BaseException {
    name = "TagOperationException";
    $fault = "client";
    resourceName;
    constructor(opts) {
        super({
            name: "TagOperationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TagOperationException.prototype);
        this.resourceName = opts.resourceName;
    }
}
export const InteractionMode = {
    INTERACTIVE: "INTERACTIVE",
    NO_VIDEO: "NO_VIDEO",
    VIDEO_ONLY: "VIDEO_ONLY",
};
export const DeviceAvailability = {
    AVAILABLE: "AVAILABLE",
    BUSY: "BUSY",
    HIGHLY_AVAILABLE: "HIGHLY_AVAILABLE",
    TEMPORARY_NOT_AVAILABLE: "TEMPORARY_NOT_AVAILABLE",
};
export const DeviceFormFactor = {
    PHONE: "PHONE",
    TABLET: "TABLET",
};
export const InstanceStatus = {
    AVAILABLE: "AVAILABLE",
    IN_USE: "IN_USE",
    NOT_AVAILABLE: "NOT_AVAILABLE",
    PREPARING: "PREPARING",
};
export const ExecutionResult = {
    ERRORED: "ERRORED",
    FAILED: "FAILED",
    PASSED: "PASSED",
    PENDING: "PENDING",
    SKIPPED: "SKIPPED",
    STOPPED: "STOPPED",
    WARNED: "WARNED",
};
export const ExecutionStatus = {
    COMPLETED: "COMPLETED",
    PENDING: "PENDING",
    PENDING_CONCURRNECY: "PENDING_CONCURRENCY",
    PENDING_DEVICE: "PENDING_DEVICE",
    PREPARING: "PREPARING",
    PROCESSING: "PROCESSING",
    RUNNING: "RUNNING",
    SCHEDULING: "SCHEDULING",
    STOPPING: "STOPPING",
};
export class InternalServiceException extends __BaseException {
    name = "InternalServiceException";
    $fault = "server";
    constructor(opts) {
        super({
            name: "InternalServiceException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServiceException.prototype);
    }
}
export const UploadType = {
    ANDROID_APP: "ANDROID_APP",
    APPIUM_JAVA_JUNIT_TEST_PACKAGE: "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
    APPIUM_JAVA_JUNIT_TEST_SPEC: "APPIUM_JAVA_JUNIT_TEST_SPEC",
    APPIUM_JAVA_TESTNG_TEST_PACKAGE: "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
    APPIUM_JAVA_TESTNG_TEST_SPEC: "APPIUM_JAVA_TESTNG_TEST_SPEC",
    APPIUM_NODE_TEST_PACKAGE: "APPIUM_NODE_TEST_PACKAGE",
    APPIUM_NODE_TEST_SPEC: "APPIUM_NODE_TEST_SPEC",
    APPIUM_PYTHON_TEST_PACKAGE: "APPIUM_PYTHON_TEST_PACKAGE",
    APPIUM_PYTHON_TEST_SPEC: "APPIUM_PYTHON_TEST_SPEC",
    APPIUM_RUBY_TEST_PACKAGE: "APPIUM_RUBY_TEST_PACKAGE",
    APPIUM_RUBY_TEST_SPEC: "APPIUM_RUBY_TEST_SPEC",
    APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
    APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
    APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
    APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
    APPIUM_WEB_NODE_TEST_PACKAGE: "APPIUM_WEB_NODE_TEST_PACKAGE",
    APPIUM_WEB_NODE_TEST_SPEC: "APPIUM_WEB_NODE_TEST_SPEC",
    APPIUM_WEB_PYTHON_TEST_PACKAGE: "APPIUM_WEB_PYTHON_TEST_PACKAGE",
    APPIUM_WEB_PYTHON_TEST_SPEC: "APPIUM_WEB_PYTHON_TEST_SPEC",
    APPIUM_WEB_RUBY_TEST_PACKAGE: "APPIUM_WEB_RUBY_TEST_PACKAGE",
    APPIUM_WEB_RUBY_TEST_SPEC: "APPIUM_WEB_RUBY_TEST_SPEC",
    CALABASH_TEST_PACKAGE: "CALABASH_TEST_PACKAGE",
    EXTERNAL_DATA: "EXTERNAL_DATA",
    INSTRUMENTATION_TEST_PACKAGE: "INSTRUMENTATION_TEST_PACKAGE",
    INSTRUMENTATION_TEST_SPEC: "INSTRUMENTATION_TEST_SPEC",
    IOS_APP: "IOS_APP",
    UIAUTOMATION_TEST_PACKAGE: "UIAUTOMATION_TEST_PACKAGE",
    UIAUTOMATOR_TEST_PACKAGE: "UIAUTOMATOR_TEST_PACKAGE",
    WEB_APP: "WEB_APP",
    XCTEST_TEST_PACKAGE: "XCTEST_TEST_PACKAGE",
    XCTEST_UI_TEST_PACKAGE: "XCTEST_UI_TEST_PACKAGE",
    XCTEST_UI_TEST_SPEC: "XCTEST_UI_TEST_SPEC",
};
export const UploadCategory = {
    CURATED: "CURATED",
    PRIVATE: "PRIVATE",
};
export const UploadStatus = {
    FAILED: "FAILED",
    INITIALIZED: "INITIALIZED",
    PROCESSING: "PROCESSING",
    SUCCEEDED: "SUCCEEDED",
};
export const CurrencyCode = {
    USD: "USD",
};
export class InvalidOperationException extends __BaseException {
    name = "InvalidOperationException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "InvalidOperationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidOperationException.prototype);
    }
}
export const TestType = {
    APPIUM_JAVA_JUNIT: "APPIUM_JAVA_JUNIT",
    APPIUM_JAVA_TESTNG: "APPIUM_JAVA_TESTNG",
    APPIUM_NODE: "APPIUM_NODE",
    APPIUM_PYTHON: "APPIUM_PYTHON",
    APPIUM_RUBY: "APPIUM_RUBY",
    APPIUM_WEB_JAVA_JUNIT: "APPIUM_WEB_JAVA_JUNIT",
    APPIUM_WEB_JAVA_TESTNG: "APPIUM_WEB_JAVA_TESTNG",
    APPIUM_WEB_NODE: "APPIUM_WEB_NODE",
    APPIUM_WEB_PYTHON: "APPIUM_WEB_PYTHON",
    APPIUM_WEB_RUBY: "APPIUM_WEB_RUBY",
    BUILTIN_FUZZ: "BUILTIN_FUZZ",
    INSTRUMENTATION: "INSTRUMENTATION",
    XCTEST: "XCTEST",
    XCTEST_UI: "XCTEST_UI",
};
export const RecurringChargeFrequency = {
    MONTHLY: "MONTHLY",
};
export const OfferingType = {
    RECURRING: "RECURRING",
};
export const OfferingTransactionType = {
    PURCHASE: "PURCHASE",
    RENEW: "RENEW",
    SYSTEM: "SYSTEM",
};
export class NotEligibleException extends __BaseException {
    name = "NotEligibleException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NotEligibleException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotEligibleException.prototype);
    }
}
export const DeviceFilterAttribute = {
    ARN: "ARN",
    AVAILABILITY: "AVAILABILITY",
    FLEET_TYPE: "FLEET_TYPE",
    FORM_FACTOR: "FORM_FACTOR",
    INSTANCE_ARN: "INSTANCE_ARN",
    INSTANCE_LABELS: "INSTANCE_LABELS",
    MANUFACTURER: "MANUFACTURER",
    MODEL: "MODEL",
    OS_VERSION: "OS_VERSION",
    PLATFORM: "PLATFORM",
    REMOTE_ACCESS_ENABLED: "REMOTE_ACCESS_ENABLED",
    REMOTE_DEBUG_ENABLED: "REMOTE_DEBUG_ENABLED",
};
export const ExecutionResultCode = {
    PARSING_FAILED: "PARSING_FAILED",
    VPC_ENDPOINT_SETUP_FAILED: "VPC_ENDPOINT_SETUP_FAILED",
};
export const TestGridSessionStatus = {
    ACTIVE: "ACTIVE",
    CLOSED: "CLOSED",
    ERRORED: "ERRORED",
};
export const SampleType = {
    CPU: "CPU",
    MEMORY: "MEMORY",
    NATIVE_AVG_DRAWTIME: "NATIVE_AVG_DRAWTIME",
    NATIVE_FPS: "NATIVE_FPS",
    NATIVE_FRAMES: "NATIVE_FRAMES",
    NATIVE_MAX_DRAWTIME: "NATIVE_MAX_DRAWTIME",
    NATIVE_MIN_DRAWTIME: "NATIVE_MIN_DRAWTIME",
    OPENGL_AVG_DRAWTIME: "OPENGL_AVG_DRAWTIME",
    OPENGL_FPS: "OPENGL_FPS",
    OPENGL_FRAMES: "OPENGL_FRAMES",
    OPENGL_MAX_DRAWTIME: "OPENGL_MAX_DRAWTIME",
    OPENGL_MIN_DRAWTIME: "OPENGL_MIN_DRAWTIME",
    RX: "RX",
    RX_RATE: "RX_RATE",
    THREADS: "THREADS",
    TX: "TX",
    TX_RATE: "TX_RATE",
};
export const TestGridSessionArtifactCategory = {
    LOG: "LOG",
    VIDEO: "VIDEO",
};
export const TestGridSessionArtifactType = {
    SELENIUM_LOG: "SELENIUM_LOG",
    UNKNOWN: "UNKNOWN",
    VIDEO: "VIDEO",
};
export class IdempotencyException extends __BaseException {
    name = "IdempotencyException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "IdempotencyException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, IdempotencyException.prototype);
    }
}
export class TagPolicyException extends __BaseException {
    name = "TagPolicyException";
    $fault = "client";
    resourceName;
    constructor(opts) {
        super({
            name: "TagPolicyException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TagPolicyException.prototype);
        this.resourceName = opts.resourceName;
    }
}
export class TooManyTagsException extends __BaseException {
    name = "TooManyTagsException";
    $fault = "client";
    resourceName;
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.resourceName = opts.resourceName;
    }
}
export const CreateTestGridUrlResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.url && { url: SENSITIVE_STRING }),
});
export const UploadFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.url && { url: SENSITIVE_STRING }),
});
export const CreateUploadResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.upload && { upload: UploadFilterSensitiveLog(obj.upload) }),
});
export const GetUploadResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.upload && { upload: UploadFilterSensitiveLog(obj.upload) }),
});
export const InstallToRemoteAccessSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.appUpload && { appUpload: UploadFilterSensitiveLog(obj.appUpload) }),
});
export const TestGridSessionArtifactFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.url && { url: SENSITIVE_STRING }),
});
export const ListTestGridSessionArtifactsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.artifacts && { artifacts: obj.artifacts.map((item) => TestGridSessionArtifactFilterSensitiveLog(item)) }),
});
export const ListUploadsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.uploads && { uploads: obj.uploads.map((item) => UploadFilterSensitiveLog(item)) }),
});
export const UpdateUploadResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.upload && { upload: UploadFilterSensitiveLog(obj.upload) }),
});
