{"version":3,"sources":["../src/launcher.ts","../src/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport {\n  CreateTestGridUrlCommand,\n  DeviceFarmClient,\n} from \"@aws-sdk/client-device-farm\";\nimport type { Logger } from \"@wdio/logger\";\nimport type { Capabilities, Options, Services } from \"@wdio/types\";\nimport { SevereServiceError } from \"webdriverio\";\n\ninterface DeviceFarmConfig extends Services.ServiceOption {\n  projectArn: string;\n  expiresInSeconds?: number;\n}\n\nexport default class DeviceFarmLauncher implements Services.ServiceInstance {\n  private readonly devicefarmClient: DeviceFarmClient;\n  private logger: Logger | undefined = undefined;\n\n  constructor(private readonly _options: DeviceFarmConfig) {\n    // DeviceFarm is only available in us-west-2\n    // https://docs.aws.amazon.com/general/latest/gr/devicefarm.html\n    this.devicefarmClient = new DeviceFarmClient({ region: \"us-west-2\" });\n  }\n\n  public async onPrepare(\n    config: Options.Testrunner,\n    capabilities: Capabilities.RemoteCapabilities\n  ): Promise<void> {\n    try {\n      const getLogger = await import(\"@wdio/logger\");\n      this.logger = getLogger.default(\"@wdio/devicefarm-service\");\n    } catch {\n      // No operation\n    }\n    if (Array.isArray(capabilities)) {\n      for (const cap of capabilities) {\n        await this.setRemoteSession(cap);\n      }\n    } else if (typeof capabilities === \"object\" && capabilities !== null) {\n      for (const cap of Object.values(capabilities)) {\n        await this.setRemoteSession(cap);\n      }\n    }\n    // Set remote session so that wdio can skip setting up drivers for cross-browser tests.\n    // See: https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-utils/src/node/manager.ts#L63\n    await this.setRemoteSession(config);\n  }\n\n  private async setRemoteSession(\n    config:\n      | Capabilities.DesiredCapabilities\n      | Capabilities.W3CCapabilities\n      | Options.WebdriverIO\n      | Options.Testrunner\n  ) {\n    const testGridUrlResult = await this.createSession();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const url = new URL(testGridUrlResult.url!);\n\n    this.logger?.info(\"Created device farm test grid:\", testGridUrlResult);\n\n    Object.assign(config, {\n      protocol: \"https\",\n      port: 443,\n      hostname: url.hostname,\n      path: url.pathname,\n      connectionRetryTimeout: 180000,\n    });\n  }\n\n  // https://docs.aws.amazon.com/devicefarm/latest/testgrid/testing-frameworks-nodejs.html\n  private async createSession() {\n    const input = {\n      projectArn: this._options.projectArn,\n      expiresInSeconds: this._options.expiresInSeconds || 900,\n    };\n    const command = new CreateTestGridUrlCommand(input);\n    try {\n      return await this.devicefarmClient.send(command);\n    } catch (err) {\n      this.logger?.error(err);\n      throw new SevereServiceError((err as Error).message);\n    }\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport DeviceFarmLauncher from \"./launcher\";\n\nexport const launcher = DeviceFarmLauncher;\n"],"mappings":";AAEA;AAAA,EACE;AAAA,EACA;AAAA,OACK;AAGP,SAAS,0BAA0B;AAOnC,IAAqB,qBAArB,MAA4E;AAAA,EAI1E,YAA6B,UAA4B;AAA5B;AAF7B,SAAQ,SAA6B;AAKnC,SAAK,mBAAmB,IAAI,iBAAiB,EAAE,QAAQ,YAAY,CAAC;AAAA,EACtE;AAAA,EAEA,MAAa,UACX,QACA,cACe;AACf,QAAI;AACF,YAAM,YAAY,MAAM,OAAO,cAAc;AAC7C,WAAK,SAAS,UAAU,QAAQ,0BAA0B;AAAA,IAC5D,QAAQ;AAAA,IAER;AACA,QAAI,MAAM,QAAQ,YAAY,GAAG;AAC/B,iBAAW,OAAO,cAAc;AAC9B,cAAM,KAAK,iBAAiB,GAAG;AAAA,MACjC;AAAA,IACF,WAAW,OAAO,iBAAiB,YAAY,iBAAiB,MAAM;AACpE,iBAAW,OAAO,OAAO,OAAO,YAAY,GAAG;AAC7C,cAAM,KAAK,iBAAiB,GAAG;AAAA,MACjC;AAAA,IACF;AAGA,UAAM,KAAK,iBAAiB,MAAM;AAAA,EACpC;AAAA,EAEA,MAAc,iBACZ,QAKA;AAvDJ;AAwDI,UAAM,oBAAoB,MAAM,KAAK,cAAc;AAEnD,UAAM,MAAM,IAAI,IAAI,kBAAkB,GAAI;AAE1C,eAAK,WAAL,mBAAa,KAAK,kCAAkC;AAEpD,WAAO,OAAO,QAAQ;AAAA,MACpB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,UAAU,IAAI;AAAA,MACd,MAAM,IAAI;AAAA,MACV,wBAAwB;AAAA,IAC1B,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,MAAc,gBAAgB;AAxEhC;AAyEI,UAAM,QAAQ;AAAA,MACZ,YAAY,KAAK,SAAS;AAAA,MAC1B,kBAAkB,KAAK,SAAS,oBAAoB;AAAA,IACtD;AACA,UAAM,UAAU,IAAI,yBAAyB,KAAK;AAClD,QAAI;AACF,aAAO,MAAM,KAAK,iBAAiB,KAAK,OAAO;AAAA,IACjD,SAAS,KAAK;AACZ,iBAAK,WAAL,mBAAa,MAAM;AACnB,YAAM,IAAI,mBAAoB,IAAc,OAAO;AAAA,IACrD;AAAA,EACF;AACF;;;ACjFO,IAAM,WAAW;","names":[]}